// Copyright (c) 2017-2020 Xiamen Yaji Software Co., Ltd.
CCEffect %{
  techniques:
  - passes:
    - vert: spine-vs:vert
      frag: spine-fs:frag
      depthStencilState:
        depthTest: false
        depthWrite: false
      blendState:
        targets:
        - blend: true
          blendSrc: src_alpha
          blendDst: one_minus_src_alpha
          blendDstAlpha: one_minus_src_alpha
      rasterizerState:
        cullMode: none
      properties:
        # mainTexture: { value: white }
        alphaThreshold: { value: 0.5 }
        u_color: { value: [1,1,1,1], editor: {type: color} }
        u_rate: { value: 1 }
}%

CCProgram spine-vs %{
  precision highp float;
  #include <cc-global>
  #if USE_LOCAL
    #include <cc-local>
  #endif

  in vec3 a_position;
  in vec2 a_texCoord;
  in vec4 a_color;

  out vec4 v_light;
  out vec4 color;
  out vec2 uv0;

  #if USE_TINT
    in vec4 a_color0;
    out vec4 v_dark;
  #endif

  #if TWO_COLORED
    in vec4 a_color2;
    out vec4 v_dark2;
  #endif

  vec4 vert () {
    vec4 pos = vec4(a_position, 1);

    #if USE_LOCAL
      pos = cc_matWorld * pos;
    #endif

    mat4 mvp;
    #if CC_USE_MODEL
      mvp = cc_matViewProj * cc_matWorld;
    #else
      mvp = cc_matViewProj;
    #endif

    pos = cc_matViewProj * pos;

    v_light = a_color;
    #if USE_TINT
      v_dark = a_color0;
    #endif

    pos = mvp * vec4(a_position, 1);
    uv0 = a_texCoord;
    color = a_color;

    #if TWO_COLORED
      v_dark2 = a_color2;
    #endif

    return pos;
  }
}%

CCProgram spine-fs %{
  precision highp float;
  #include <alpha-test>

  in vec4 v_light;
  #if USE_TINT
    in vec4 v_dark;
  #endif
  #if TWO_COLORED
    in vec4 v_dark2;
  #endif
  in vec2 uv0;
  #pragma builtin(local)
  layout(set = 2, binding = 10) uniform sampler2D cc_spriteTexture;

  #if USE_TEXTURE
    // uniform sampler2D mainTexture;
  #endif

  uniform ARGS {
    vec4 u_color;
    float u_rate;
  };

  vec4 frag () {

    vec4 o = vec4(1, 1, 1, 1);
    #if TWO_COLORED
      vec4 texColor = vec4(1, 1, 1, 1);

      texColor *= texture(cc_spriteTexture, uv0);
 	    o.a = texColor.a * v_light.a;
      o.rgb = ((texColor.a - 1.0) * v_dark2.a + 1.0 - texColor.rgb) * v_dark2.rgb + texColor.rgb * v_light.rgb;
    #else
      o *= texture(cc_spriteTexture, uv0);
      o *= v_light;
    #endif

    #if USE_TEXTURE
      // o *= texture(cc_spriteTexture, uv0);
      #if IS_GRAY
        float gray  = 0.2126 * o.r + 0.7152 * o.g + 0.0722 * o.b;
        o.r = o.g = o.b = gray;
      #endif
    #endif

    vec4 finalColor;

    #if USE_TINT
      finalColor.a = v_light.a * o.a;
      finalColor.rgb = ((o.a - 1.0) * v_dark.a + 1.0 - o.rgb) * v_dark.rgb + o.rgb * v_light.rgb;
    #else
      finalColor = o * v_light;
    #endif

    ALPHA_TEST(finalColor);

    vec3 result = mix(u_color.rgb, finalColor.rgb, u_rate);
    o = vec4(result.rgb, finalColor.a);

    // o = vec4((1.0 * u_rate), (1.0 * u_rate), (1.0 * u_rate),1);
    
    return o;
  }
}%
